{
  "name": "react-breadcrumbs-dynamic",
  "version": "1.0.4",
  "description": "React dynamic breadcrumbs extremely flexible and easy to use",
  "main": "dist/index.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/oklas/react-breadcrumbs-dynamic.git"
  },
  "keywords": [
    "breadcrumbs",
    "theme",
    "react"
  ],
  "author": "Serguei Okladnikov <oklaspec@gmail.com>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/oklas/react-breadcrumbs-dynamic/issues"
  },
  "homepage": "https://github.com/oklas/react-breadcrumbs-dynamic",
  "peerDependencies": {
    "react": "^15"
  },
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-loader": "^7.1.1",
    "babel-plugin-transform-react-jsx": "^6.24.1",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-0": "^6.24.1",
    "chai": "^4.0.2",
    "codecov.io": "^0.1.6",
    "coveralls": "^2.12.0",
    "expect": "^1.20.2",
    "istanbul": "^0.4.5",
    "mocha": "^2.4.2",
    "react": "^15.6.1",
    "react-bootstrap": "^0.31.1",
    "react-dom": "^15.6.1",
    "react-router-bootstrap": "^0.24.2",
    "react-router-dom": "^4.1.2",
    "webpack": "^3.3.0"
  },
  "dependencies": {
    "react-broadcast": "^0.3.1"
  },
  "scripts": {
    "build": "babel --presets es2015,stage-0 -d dist/ src/",
    "build:example": "cd example && webpack",
    "gh-pages:_ismaster": "if [ 'master' != `git rev-parse --abbrev-ref HEAD` ]; then echo error: branch must be master; false ; fi",
    "gh-pages:_isclean": "if [ -n \"$(git status --porcelain)\" ] ; then echo error: workspace must be clean ; false ; fi",
    "gh-pages:_isfinished": "if [ -n \"$(git branch --list gh-pages-add)\" ] ; then echo error: branch gh-pages-add must not exists ; false ; fi",
    "gh-pages:check": "npm run gh-pages:_ismaster && npm run gh-pages:_isclean && npm run gh-pages:_isfinished",
    "gh-pages:_branch": "if [ -n \"$(git branch --list gh-pages)\" ]; then git checkout gh-pages; else git checkout --orphan gh-pages && git rm -rf . && git checkout master package.json && git status && git commit --allow-empty -m 'initial commit' ; fi",
    "gh-pages:_commit": "cp package.json example && git checkout -b gh-pages-add && git add example && git commit -m `npm view . version`",
    "gh-pages:_filter": "git filter-branch -f --prune-empty --subdirectory-filter example",
    "gh-pages:_pick": "git merge --squash --allow-unrelated-histories -X theirs --no-commit gh-pages-add",
    "gh-pages:_commitif": "if [ -n \"$(git status --porcelain)\" ] ; then git commit -m `npm view . version` ; else echo nothin to commit ; fi",
    "gh-pages:_clean": "git checkout master && git branch -D gh-pages-add",
    "gh-pages:build": "npm run gh-pages:_commit && npm run gh-pages:_filter && npm run gh-pages:_branch && npm run gh-pages:_pick && npm run gh-pages:_commitif && npm run gh-pages:_clean",
    "gh-pages": "npm run gh-pages:check && npm run build:example && npm run gh-pages:build",
    "prepublish": "npm run build",
    "test": "mocha",
    "cover": "istanbul cover ./node_modules/mocha/bin/_mocha"
  }
}
